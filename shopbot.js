const mysql = require('mysql');
const TelegramBot = require('node-telegram-bot-api');
const token = 'NOTACTUAL';
const bot = new TelegramBot(token, { polling: true });

const con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "",
    database: "telegram_bot"
});

const admin_chatid = NOTACTUAL

con.connect((err) => {
    if (err) throw err;
    let admins = [];
    let settings = { isLog: 1, isWork: 1 };
    let items = {};
    setInterval(() => {
        con.query("SELECT * FROM items", (err,rows,fields) => {
            if (err) throw err;
            rows.forEach(row => {
                items[row.id] = {
                    item_name: row.item_name,
                    item_desc: row.item_desc,
                    item_price: row.item_price,
                    item_sold: row.item_sold
                };
            });
        });

        con.query("SELECT * FROM settings", (err,res,fields) => {
            if (err) throw err;
            settings.isLog = res[0].isLog;
            settings.isWork = res[0].isWork;
        });

        con.query("SELECT * FROM admins", (err,rows,fields) => {
            if (err) throw err;
            admins = [];
            rows.forEach(row => {
                admins.push(row.tg_id);
            });
        });
    }, 50);

    //! COMMAND -> start
    bot.onText(/\/start/, (msg) => {
        if (settings.isWork === 0 && !admins.includes(msg.from.id)) { bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–ë–æ—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö!`); return; }
        const timeNow = nowTime();
        let message = 'üëã | –ü—Ä–∏–≤–µ—Ç!\n–í –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ —É—Å–ª—É–≥–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–º–∏ –Ω–∞–º–∏.\n–° –ø—Ä–µ–¥–æ—Å—Ç–≤–ª—è–µ–º—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏, –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∏–∂–µ:\n';
        let keys = Object.keys(items);
        keys.forEach((key, index) => {
            let item = items[key];
            message += `${index+1} | ${item.item_name} (${item.item_desc}) - ${item.item_price}‚Ç¨\n`;
        });
        bot.sendMessage(msg.chat.id, message)
        .then((res) => {
            bot.sendMessage(msg.chat.id, `–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–∞–∫—É—é-–ª–∏–±–æ —É—Å–ª—É–≥—É –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π:\n/buy {–¶–∏—Ñ—Ä–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞*} {–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è}\n\n<i>–ê—Ä–≥—É–º–µ–Ω—Ç—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∑–≤–µ–∑–¥–æ—á–∫–æ–π (*), —è–≤–ª—è—é—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏!\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É–∫–∞–∑–∞–Ω–∞ –≤ –∫—Ä—É–≥–ª—ã—Ö —Å–∫–æ–±–∫–∞—Ö —É —Ç–æ–≤–∞—Ä–æ–≤.\n–ö –∑–∞–∫–∞–∑—É –º–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ.</i>`,{ parse_mode:'HTML' });
        })
        .then((res) => {
            if (settings.isLog === 1) {
                bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /start\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
            }
        });
    });

    //! COMMAND -> chatid
    bot.onText(/\/chatid/, (msg) => {
        if (settings.isWork === 0 && !admins.includes(msg.from.id)) { bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–ë–æ—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö!`); return; }
        const timeNow = nowTime();
        bot.sendMessage(msg.chat.id, msg.chat.id)
        .then((res) => {
            if (settings.isLog === 1) {
                bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /chatid\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
            }
        });
    });

    //! COMMAND -> setadmin
    bot.onText(/\/setadmin (\d+)/, (msg,match) => {
        if (settings.isWork === 0 && !admins.includes(msg.from.id)) { bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–ë–æ—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö!`); return; }
        const timeNow = nowTime();
        if (admins.includes(msg.from.id)) {
            if (admins.includes(parseInt(match[1]))) {
                con.query("DELETE FROM `admins` WHERE tg_id = " + match[1], (err,res,fields) => {
                    if (err) throw err;
                    bot.sendMessage(msg.chat.id, `‚úÖ | –£—Å–ø–µ—à–Ω–æ\n–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–Ω—è—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${match[1]}!`)
                    .then((res) => {
                        if (settings.isLog === 1) {
                            bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /setadmin ${match[1]}\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
                        }
                    });
                });
            } else {
                con.query("INSERT INTO `admins`(`id`, `tg_id`) VALUES (NULL, " + match[1] + ")", (err,res,fields) => {
                    if (err) throw err;
                    bot.sendMessage(msg.chat.id, `‚úÖ | –£—Å–ø–µ—à–Ω–æ\n–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${match[1]}!`)
                    .then((res) => {
                        if (settings.isLog === 1) {
                            bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /setadmin ${match[1]}\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
                        }
                    });
                });
            }
        } else {
            bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!`)
            .then((res) => {
                if (settings.isLog === 1) {
                    bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /setadmin ${match[1]}\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
                }
            });
        }
    });

    //! COMMAND -> setlogs
    bot.onText(/\/setlogs/, (msg) => {
        if (settings.isWork === 0 && !admins.includes(msg.from.id)) { bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–ë–æ—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö!`); return; }
        const timeNow = nowTime();
        const isLog_before = settings.isLog
        if (admins.includes(msg.from.id)) {
            con.query(`UPDATE \`settings\` SET \`isLog\`='${settings.isLog === 1 ? '0' : '1'}'`, (err,res,fields) => {
                if (err) throw err;
                bot.sendMessage(msg.chat.id, `‚úÖ | –£—Å–ø–µ—à–Ω–æ\n–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π ${isLog_before === 1 ? '–≤—ã–∫–ª—é—á–µ–Ω–æ' : '–≤–∫–ª—é—á–µ–Ω–æ'}!`)
                .then((res) => {
                    bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /setlogs\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
                });
            });
        } else {
            bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!`)
            .then((res) => {
                if (settings.isLog === 1) {
                    bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /setlogs\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
                }
            });
        }
    });

    //! COMMAND -> setwork
    bot.onText(/\/setwork/, (msg) => {
        if (settings.isWork === 0 && !admins.includes(msg.from.id)) { bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–ë–æ—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö!`); return; }
        const timeNow = nowTime();
        const isWork_before = settings.isWork
        if (admins.includes(msg.from.id)) {
            con.query(`UPDATE \`settings\` SET \`isWork\`='${settings.isWork === 1 ? '0' : '1'}'`, (err,res,fields) => {
                if (err) throw err;
                bot.sendMessage(msg.chat.id, `‚úÖ | –£—Å–ø–µ—à–Ω–æ\n–¢–µ—Ö —Ä–∞–±–æ—Ç—ã ${isWork_before === 1 ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–≤—ã–∫–ª—é—á–µ–Ω—ã'}!`)
                .then((res) => {
                    bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /setwork\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
                });
            });
        } else {
            bot.sendMessage(msg.chat.id, `üõë | –û—à–∏–±–∫–∞\n–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!`)
            .then((res) => {
                if (settings.isLog === 1) {
                    bot.sendMessage(admin_chatid, `[LOGS]\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /setwork\n–ß–∞—Ç: ${msg.chat.id}\n–û—Ç: ${msg.from.id}\n–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${admins.includes(msg.from.id) ? 'TRUE' : 'FALSE'}\n\n–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${timeNow}`);
                }
            });
        }
    });

});

function nowTime() {
    const date = new Date();
    const timeNow = date.toLocaleString();
    return timeNow;
}